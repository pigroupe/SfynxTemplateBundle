                    {% block crop_input %}
                        {% set formats = crop.formats|sort|reverse %}
                        {% if (options.unset is defined) and (options.unset|count >= 1) %}
                            {% set formats = formats|unset(options.unset) %}
                        {% endif %}
                        {% set format_first = crop.formats|steps(0) %}
                        {% if options.count is defined and (options.count|php_funct('is_int')) %}
                            {% set ident = media.id ~ '_' ~ options.count %}
                        {% else %}
                            {% set ident = media.id %}
                        {% endif %}
                        <input type="hidden" id="x_{{ ident }}" name="x_{{ ident }}" value="0" />
                        <input type="hidden" id="y_{{ ident }}" name="y_{{ ident }}" value="0"/>
                        <input type="hidden" id="w_{{ ident }}" name="w_{{ ident }}" value="{{ format_first.width }}" />
                        <input type="hidden" id="h_{{ ident }}" name="h_{{ ident }}" value="{{ format_first.height }}"/>
                        <input type="hidden" id="img_crop[{{ ident }}]"   name="img_crop[{{ ident }}]"   value="0" />
                        <input type="hidden" id="img_name_{{ ident }}"    name="img_name_{{ ident }}"    value="{{ format_first.prefix }}"/>
                        <input type="hidden" id="img_width_{{ ident }}"   name="img_width_{{ ident }}"   value="{{ format_first.width }}" />
                        <input type="hidden" id="img_height_{{ ident }}"  name="img_height_{{ ident }}"  value="{{ format_first.height }}" />
                        <input type="hidden" id="img_quality_{{ ident }}" name="img_quality_{{ ident }}" value="{{ format_first.quality }}" />
                        {% if (options.class is defined) and (options.class != "") %}
                        <div>
                            <div class="symfony-form-errors" title="Alert Errors"></div>
                            <div class="clearfix ">
                                <label class="{{ class }}"></label>
                                <div class="input">
                        {% endif %}
                                <select id="select_crop_formats_{{ ident }}" style="margin-top: 10px; margin-bottom: 10px;">
                                    {% for format in formats %}
                                    <option value="{{ format.prefix }}">{{ format.legend }} ({{ format.width }}x{{ format.height }})</option>
                                    {% endfor %}
                                </select></br></br>
                        {% if (options.class is defined) and (options.class != "") %}
                                </div>
                            </div>
                        </div>
                        {% endif %}
                    {% endblock %}


                    {% block crop_script %}
                        {% set formats = crop.formats|sort|reverse %}
                        {% if (options.unset is defined) and (options.unset|count >= 1) %}
                            {% set formats = formats|unset(options.unset) %}
                        {% endif %}
                        {% set format_first = crop.formats|steps(0) %}
                        {% if options.count is defined and (options.count|php_funct('is_int')) %}
                            {% set ident = media.id ~ '_' ~ options.count %}
                        {% else %}
                            {% set ident = media.id %}
                        {% endif %}                    
                        {{ picture_form(media, nameForm,  'reference', 'display: block; text-align:left;','cropbox_'~ident, 'reference_crop_'~ident)|raw}}
                        {% for format in formats %}
                        {{ picture_form(media, nameForm,  format.prefix, 'display: block; text-align:left;', '', 'img_crop_'~ident)|raw }}
                        {% endfor %}

                        <script type="text/javascript">
                            //<![CDATA[
                            $(document).ready(function(){
                                function updateTaille()
                                {
                                    document.getElementById("img_crop[{{ ident }}]").value = "1";
                                }
                                function updateCoords(c)
                                {
                                    $('#x_{{ ident }}').val(c.x);
                                    $('#y_{{ ident }}').val(c.y);
                                    $('#w_{{ ident }}').val(c.w);
                                    $('#h_{{ ident }}').val(c.h);
                                };
                                var cropTab = []
                                {% for format in formats %}
                                cropTab['{{ format.prefix }}_width']={{ format.width }};
                                cropTab['{{ format.prefix }}_height']={{ format.height }};
                                cropTab['{{ format.prefix }}_ratio']={{ format.ratio }};
                                cropTab['{{ format.prefix }}_quality']={{ format.quality }};
                                {% endfor %}

                                $(".img_crop_{{ ident }}").hide();
                                $("#picture_{{ media.id }}_{{ format_first.prefix }}").show();
                                $("[class*='reference_crop_{{ ident }}']").each(function(i){
                                    $('#cropbox_{{ ident }}').css('max-width','none').Jcrop({
                                        onSelect: updateCoords,
                                        onChange: updateTaille,
                                        animateTo: [ 0,0,cropTab['{{ format_first.prefix }}_width'],cropTab['{{ format_first.prefix }}_height'] ],
                                        aspectRatio: cropTab['{{ format_first.prefix }}_ratio']
                                    },function(){
                                        jcrop_api_{{ ident }} = this;
                                    });
                                    $("#select_crop_formats_{{ ident }}").on('change', function(){
                                        var name = $("#select_crop_formats_{{ ident }} option:selected").val();
                                        $(".img_crop_{{ ident }}").fadeOut();
                                        $("#picture_{{ media.id }}_" + name).fadeIn();
                                        $("#img_width_{{ ident }}").val(cropTab[name + "_width"]);
                                        $("#img_height_{{ ident }}").val(cropTab[name + "_height"]);
                                        $("#img_quality_{{ ident }}").val(cropTab[name + "_quality"]);
                                        $("#img_name_{{ ident }}").val(name);
                                        jcrop_api_{{ ident }}.setOptions({
                                            aspectRatio: cropTab[name + "_ratio"]
                                        });
                                    });
                                    $('#select_crop_formats_{{ ident }}').detach().appendTo(this);
                                });
                            });
                            //]]>
                        </script>

                        {#<script type="text/javascript">#}
                        {#jQuery(function($){#}
                            {#// The variable jcrop_api will hold a reference to the#}
                            {#// Jcrop API once Jcrop is instantiated.#}
                            {#var jcrop_api = [];#}
                            {#var cropTab = [];#}
                            {#var mediaId = '{{ media.id }}';#}
                            {#var ident = '{{ ident }}';#}
                            {#var formatName = '{{ format_first.prefix }}';#}

                            {#{% for format in formats %}#}
                            {#cropTab['{{ format.prefix }}_width']={{ format.width }};#}
                            {#cropTab['{{ format.prefix }}_height']={{ format.height }};#}
                            {#cropTab['{{ format.prefix }}_ratio']={{ format.ratio }};#}
                            {#cropTab['{{ format.prefix }}_quality']={{ format.quality }};#}
                            {#{% endfor %}#}

                            {#// In this example, since Jcrop may be attached or detached#}
                            {#// at the whim of the user, I've wrapped the call into a function#}
                            {#initJcrop(ident, mediaId, cropTab, formatName);#}

                            {#function initJcrop(ident, mediaId, cropTab)// start function#}
                            {#{#}
                                {#function updateTaille()#}
                                {#{#}
                                    {#document.getElementById("img_crop[".parseInt(ident)."]").value = '1';#}
                                {#}#}

                                {#function updateCoords(c)#}
                                {#{#}
                                    {#$('#x_' + ident).val(c.x);#}
                                    {#$('#y_' + ident).val(c.y);#}
                                    {#$('#w_' + ident).val(c.w);#}
                                    {#$('#h_' + ident).val(c.h);#}
                                {#};#}

                                {#$(".img_crop_" + ident).hide();#}
                                {#$("#picture_" + ident + "_" + formatName).show();#}
                                {#$("[class*='reference_crop_" + ident + "']").each(function(i){#}
                                     {#$('#cropbox_' + ident).css('max-width','none').Jcrop({#}
                                        {#onSelect: updateCoords,#}
                                        {#onChange: updateTaille,#}
                                        {#animateTo: [ 0, 0, cropTab[formatName + '_width'], cropTab[formatName + '_height'] ],#}
                                        {#aspectRatio: cropTab[formatName + '_ratio']#}
                                     {#},function(){#}
                                        {#jcrop_api[parseInt(ident)] = this;#}
                                     {#});#}
                                     {#$("#select_crop_formats_" + ident).on('change', function(){#}
                                        {#var name = $("#select_crop_formats_" + ident + " option:selected").val();#}
                                        {#$(".img_crop_" + ident).fadeOut();#}
                                        {#$("#picture_" + mediaId + "_" + name).fadeIn();#}
                                        {#$("#img_width_" + ident).val(cropTab[name + "_width"]);#}
                                        {#$("#img_height_" + ident).val(cropTab[name + "_height"]);#}
                                        {#$("#img_quality_" + ident).val(cropTab[name + "_quality"]);#}
                                        {#$("#img_name_" + ident).val(name);#}
                                        {#console.log(jcrop_api)#}
                                        {#jcrop_api[parseInt(ident)].setOptions({#}
                                            {#aspectRatio: cropTab[name + "_ratio"]#}
                                        {#});#}
                                    {#});#}
                                    {#$('#select_crop_formats_' + ident).detach().appendTo(this);#}
                                {#});#}
                            {#};// end function#}

                        {#});#}
                        {#</script> #}
                    {% endblock %}